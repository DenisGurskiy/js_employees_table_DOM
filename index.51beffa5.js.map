{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAsUQ,EA6BA,EAUA,EA7WF,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAO,SAAS,aAAa,CAAC,SAChC,EAAY,MACZ,EAAkB,GAUlB,EAAiB,CAAA,EAEf,EAAkB,SAAS,aAAa,CAAC,MAE/C,CAAA,EAAgB,KAAK,CAAC,QAAQ,CAAG,WACjC,EAAgB,KAAK,CAAC,GAAG,CAAG,OAC5B,EAAgB,KAAK,CAAC,KAAK,CAAG,OAE9B,SAAS,IAAI,CAAC,WAAW,CAAC,GAG1B,IAAM,EAAe,SAAC,CAAtB,SACE,AAAI,EAAK,MAAM,CAAG,IAChB,EACE,aACA,qCACA,SAGK,CAAA,EAIX,EAYM,EAAc,SAAC,CAArB,SACE,AAAI,MAAM,IACR,EAAiB,YAAa,uBAAwB,SAE/C,CAAA,GAGL,CAAA,AAAO,GAAP,CAAC,GAAY,CAAC,EAAM,EAAA,IACtB,EACE,YACA,4CACA,SAGK,CAAA,EAIX,EAUM,EAAa,SAAC,CAApB,EACE,IAAI,EAAW,CAAA,EACX,EAAgB,CAAA,EAEf,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAqB,CAAA,CAAA,OAAA,QAAA,CAAA,GAArB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA6B,CAA7B,IAAM,EAAN,EAAA,KAAA,CACK,EAAe,EAAf,GAAA,CAAK,EAAU,EAAV,KAAb,AAZmB,CAAA,IAAjB,AAcmB,EAdb,MAAM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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-shadow */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar head = document.querySelector(\"thead\");\nvar body = document.querySelector(\"tbody\");\nvar sortOrder = \"ASC\";\nvar sortColumnIndex = -1;\nvar inputs = [\n    \"Name\",\n    \"Position\",\n    \"Office\",\n    \"Age\",\n    \"Salary\"\n];\nvar offices = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nvar isEnterPressed = false;\nvar notificationDiv = document.createElement(\"div\");\nnotificationDiv.style.position = \"absolute\";\nnotificationDiv.style.top = \"10px\";\nnotificationDiv.style.right = \"10px\";\ndocument.body.appendChild(notificationDiv);\n// #region validation\nvar validateName = function(name) {\n    if (name.length < 4) {\n        pushNotification(\"Name Error\", \"Name value has less than 4 letters\", \"error\");\n        return true;\n    }\n    return false;\n};\nvar validateSalary = function(salary) {\n    if (isNaN(salary)) {\n        pushNotification(\"Salary Error\", \"Salary must be a number\", \"error\");\n        return true;\n    }\n    return false;\n};\nvar validateAge = function(age) {\n    if (isNaN(age)) {\n        pushNotification(\"Age Error\", \"Age must be a number\", \"error\");\n        return true;\n    }\n    if (+age < 18 || +age > 90) {\n        pushNotification(\"Age Error\", \"Age value is less than 18 or more than 90\", \"error\");\n        return true;\n    }\n    return false;\n};\nvar validateRequired = function(value) {\n    if (value.length === 0) return true;\n    return false;\n};\nvar validation = function(values) {\n    var hasError = false;\n    var requiredError = false;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var fieldsValue = _step.value;\n            var key = fieldsValue.key, value = fieldsValue.value;\n            if (validateRequired(value)) {\n                requiredError = true;\n                hasError = true;\n            }\n            if (key === \"name\") hasError = hasError || validateName(value);\n            if (key === \"age\") hasError = hasError || validateAge(value);\n            if (key === \"salary\" && value === \"$\") {\n                requiredError = true;\n                hasError = true;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (requiredError) pushNotification(\"Error\", \"All fields are required\", \"error\");\n    return hasError;\n};\n// #endregion\nhead.addEventListener(\"click\", function(e) {\n    var rows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n    var index = _to_consumable_array(e.target.parentNode.children).indexOf(e.target);\n    if (sortColumnIndex === index && sortOrder === \"ASC\") sortOrder = \"DESC\";\n    else {\n        sortColumnIndex = index;\n        sortOrder = \"ASC\";\n    }\n    rows.sort(function(row1, row2) {\n        var columns1 = _to_consumable_array(row1.querySelectorAll(\"td\"));\n        var columns2 = _to_consumable_array(row2.querySelectorAll(\"td\"));\n        var cell1 = columns1[index].textContent;\n        var cell2 = columns2[index].textContent;\n        if (index <= 2) return sortOrder === \"ASC\" ? cell1.localeCompare(cell2) : cell2.localeCompare(cell1);\n        else {\n            var first = +cell1.replace(/[$,]/g, \"\");\n            var second = +cell2.replace(/[$,]/g, \"\");\n            return sortOrder === \"ASC\" ? first - second : second - first;\n        }\n    });\n    body.innerHTML = \"\";\n    rows.forEach(function(row) {\n        body.appendChild(row);\n    });\n});\n// #region change\nvar changeValue = function(oldData) {\n    var input = document.querySelector(\".cell-input\");\n    var cell = input.closest(\"td\");\n    var index = _to_consumable_array(cell.parentNode.children).indexOf(cell);\n    var value = input.value.trim();\n    var hasError = false;\n    switch(index){\n        case 0:\n            hasError = validateName(value) ? true : hasError;\n            break;\n        case 3:\n            hasError = validateAge(value) ? true : hasError;\n            break;\n        case 4:\n            hasError = validateSalary(value) ? true : hasError;\n            break;\n    }\n    if (index !== 4) cell.textContent = value === \"\" || hasError ? oldData : value;\n    else cell.textContent = value === \"\" || hasError ? oldData : \"$\" + value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    input.remove();\n};\nvar onEnter = function(e, oldData) {\n    if (e.keyCode === 13) {\n        isEnterPressed = true;\n        changeValue(oldData);\n    }\n};\nvar checkOtherSelect = function() {\n    var otherSelect = body.querySelector(\"select\");\n    if (otherSelect) {\n        otherSelect.closest(\"td\").textContent = otherSelect.value;\n        otherSelect.remove();\n    }\n};\n// #endregion\nbody.addEventListener(\"dblclick\", function(e) {\n    var cell = e.target.closest(\"td\");\n    var oldData = cell.textContent;\n    var index = _to_consumable_array(cell.parentNode.children).indexOf(cell);\n    checkOtherSelect();\n    cell.textContent = \"\";\n    if (index !== 2) {\n        var input = document.createElement(\"input\");\n        input.value = index === 4 ? oldData.replace(/[$,]/g, \"\") : oldData;\n        input.classList.add(\"cell-input\");\n        input.focus();\n        input.onblur = function() {\n            if (!isEnterPressed) changeValue(oldData);\n            isEnterPressed = false;\n        };\n        input.addEventListener(\"keydown\", function(event) {\n            onEnter(event, oldData);\n        });\n        cell.appendChild(input);\n        input.focus();\n    } else {\n        var select = document.querySelector(\"select\").cloneNode(true);\n        select.classList.add(\"cell-input\");\n        select.value = oldData;\n        cell.appendChild(select);\n        select.addEventListener(\"change\", function(event) {\n            cell.textContent = event.target.value;\n            select.remove();\n        });\n        setTimeout(function() {\n            select.focus();\n        }, 10);\n    }\n});\nbody.addEventListener(\"click\", function(e) {\n    var allRows = _to_consumable_array(body.querySelectorAll(\"tr\"));\n    allRows.forEach(function(row) {\n        row.classList.remove(\"active\");\n    });\n    e.target.closest(\"tr\").classList.add(\"active\");\n});\n// #region notification\nvar pushNotification = function(title, description, type) {\n    var notification = document.createElement(\"div\");\n    var messageTitle = document.createElement(\"h2\");\n    var messageDescription = document.createElement(\"p\");\n    notification.classList.add(\"notification\", type);\n    notification.dataset.qa = \"notification\";\n    notification.position = \"relative\";\n    messageTitle.classList.add(\"title\");\n    messageTitle.textContent = title;\n    messageDescription.textContent = description;\n    notification.appendChild(messageTitle);\n    notification.appendChild(messageDescription);\n    notification.style.position = \"relative\";\n    notificationDiv.appendChild(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 2000);\n};\n// #endregion\nvar formSubmit = function(e) {\n    e.preventDefault();\n    var hasError = false;\n    var formData = new FormData(e.target.closest(\"form\"));\n    var fields = [\n        \"name\",\n        \"position\",\n        \"office\",\n        \"age\",\n        \"salary\"\n    ];\n    var fieldValues = fields.map(function(field) {\n        var value = formData.get(field).trim();\n        if (field === \"salary\") value = \"$\" + value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return {\n            key: field,\n            value: value\n        };\n    });\n    hasError = validation(fieldValues);\n    if (!hasError) {\n        var row = document.createElement(\"tr\");\n        fieldValues.forEach(function(value) {\n            var col = document.createElement(\"td\");\n            col.textContent = value.value;\n            row.appendChild(col);\n        });\n        body.appendChild(row);\n        pushNotification(\"Add new employee\", \"New employee was added to table\", \"success\");\n    }\n};\nvar createForm = function() {\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    inputs.forEach(function(eachInput) {\n        var label = document.createElement(\"label\");\n        var input = document.createElement(\"select\");\n        if (eachInput !== \"Office\") {\n            input = document.createElement(\"input\");\n            switch(eachInput){\n                case \"Age\":\n                case \"Salary\":\n                    input.type = \"number\";\n                    break;\n                default:\n                    input.type = \"text\";\n            }\n        }\n        label.textContent = \"\".concat(eachInput, \": \");\n        input.name = eachInput.toLowerCase();\n        input.dataset.qa = eachInput.toLowerCase();\n        label.appendChild(input);\n        form.appendChild(label);\n    });\n    var office = form.querySelector(\"select\");\n    offices.forEach(function(eachOffice) {\n        var option = document.createElement(\"option\");\n        option.textContent = eachOffice;\n        option.value = eachOffice;\n        office.appendChild(option);\n    });\n    var button = document.createElement(\"button\");\n    button.type = \"submit\";\n    button.textContent = \"Save to table\";\n    form.appendChild(button);\n    form.addEventListener(\"submit\", formSubmit);\n    return form;\n};\ndocument.body.appendChild(createForm());\n\n//# sourceMappingURL=index.51beffa5.js.map\n","/* eslint-disable no-shadow */\n'use strict';\n\nconst head = document.querySelector('thead');\nconst body = document.querySelector('tbody');\nlet sortOrder = 'ASC';\nlet sortColumnIndex = -1;\nconst inputs = ['Name', 'Position', 'Office', 'Age', 'Salary'];\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\nlet isEnterPressed = false;\n\nconst notificationDiv = document.createElement('div');\n\nnotificationDiv.style.position = 'absolute';\nnotificationDiv.style.top = '10px';\nnotificationDiv.style.right = '10px';\n\ndocument.body.appendChild(notificationDiv);\n\n// #region validation\nconst validateName = (name) => {\n  if (name.length < 4) {\n    pushNotification(\n      'Name Error',\n      'Name value has less than 4 letters',\n      'error',\n    );\n\n    return true;\n  }\n\n  return false;\n};\n\nconst validateSalary = (salary) => {\n  if (isNaN(salary)) {\n    pushNotification('Salary Error', 'Salary must be a number', 'error');\n\n    return true;\n  }\n\n  return false;\n};\n\nconst validateAge = (age) => {\n  if (isNaN(age)) {\n    pushNotification('Age Error', 'Age must be a number', 'error');\n\n    return true;\n  }\n\n  if (+age < 18 || +age > 90) {\n    pushNotification(\n      'Age Error',\n      'Age value is less than 18 or more than 90',\n      'error',\n    );\n\n    return true;\n  }\n\n  return false;\n};\n\nconst validateRequired = (value) => {\n  if (value.length === 0) {\n    return true;\n  }\n\n  return false;\n};\n\nconst validation = (values) => {\n  let hasError = false;\n  let requiredError = false;\n\n  for (const fieldsValue of values) {\n    const { key, value } = fieldsValue;\n\n    if (validateRequired(value)) {\n      requiredError = true;\n      hasError = true;\n    }\n\n    if (key === 'name') {\n      hasError = hasError || validateName(value);\n    }\n\n    if (key === 'age') {\n      hasError = hasError || validateAge(value);\n    }\n\n    if (key === 'salary' && value === '$') {\n      requiredError = true;\n      hasError = true;\n    }\n  }\n\n  if (requiredError) {\n    pushNotification('Error', 'All fields are required', 'error');\n  }\n\n  return hasError;\n};\n// #endregion\n\nhead.addEventListener('click', (e) => {\n  const rows = [...document.querySelectorAll('tbody tr')];\n  const index = [...e.target.parentNode.children].indexOf(e.target);\n\n  if (sortColumnIndex === index && sortOrder === 'ASC') {\n    sortOrder = 'DESC';\n  } else {\n    sortColumnIndex = index;\n    sortOrder = 'ASC';\n  }\n\n  rows.sort((row1, row2) => {\n    const columns1 = [...row1.querySelectorAll('td')];\n    const columns2 = [...row2.querySelectorAll('td')];\n    const cell1 = columns1[index].textContent;\n    const cell2 = columns2[index].textContent;\n\n    if (index <= 2) {\n      return sortOrder === 'ASC'\n        ? cell1.localeCompare(cell2)\n        : cell2.localeCompare(cell1);\n    } else {\n      const first = +cell1.replace(/[$,]/g, '');\n      const second = +cell2.replace(/[$,]/g, '');\n\n      return sortOrder === 'ASC' ? first - second : second - first;\n    }\n  });\n\n  body.innerHTML = '';\n\n  rows.forEach((row) => {\n    body.appendChild(row);\n  });\n});\n\n// #region change\nconst changeValue = (oldData) => {\n  const input = document.querySelector('.cell-input');\n  const cell = input.closest('td');\n  const index = [...cell.parentNode.children].indexOf(cell);\n  const value = input.value.trim();\n  let hasError = false;\n\n  switch (index) {\n    case 0:\n      hasError = validateName(value) ? true : hasError;\n      break;\n    case 3:\n      hasError = validateAge(value) ? true : hasError;\n      break;\n    case 4:\n      hasError = validateSalary(value) ? true : hasError;\n      break;\n  }\n\n  if (index !== 4) {\n    cell.textContent = value === '' || hasError ? oldData : value;\n  } else {\n    cell.textContent =\n      value === '' || hasError\n        ? oldData\n        : '$' + value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  input.remove();\n};\n\nconst onEnter = (e, oldData) => {\n  if (e.keyCode === 13) {\n    isEnterPressed = true;\n    changeValue(oldData);\n  }\n};\n\nconst checkOtherSelect = () => {\n  const otherSelect = body.querySelector('select');\n\n  if (otherSelect) {\n    otherSelect.closest('td').textContent = otherSelect.value;\n    otherSelect.remove();\n  }\n};\n// #endregion\n\nbody.addEventListener('dblclick', (e) => {\n  const cell = e.target.closest('td');\n  const oldData = cell.textContent;\n  const index = [...cell.parentNode.children].indexOf(cell);\n\n  checkOtherSelect();\n\n  cell.textContent = '';\n\n  if (index !== 2) {\n    const input = document.createElement('input');\n\n    input.value = index === 4 ? oldData.replace(/[$,]/g, '') : oldData;\n    input.classList.add('cell-input');\n    input.focus();\n\n    input.onblur = () => {\n      if (!isEnterPressed) {\n        changeValue(oldData);\n      }\n      isEnterPressed = false;\n    };\n\n    input.addEventListener('keydown', (event) => {\n      onEnter(event, oldData);\n    });\n\n    cell.appendChild(input);\n\n    input.focus();\n  } else {\n    const select = document.querySelector('select').cloneNode(true);\n\n    select.classList.add('cell-input');\n    select.value = oldData;\n\n    cell.appendChild(select);\n\n    select.addEventListener('change', (event) => {\n      cell.textContent = event.target.value;\n\n      select.remove();\n    });\n\n    setTimeout(() => {\n      select.focus();\n    }, 10);\n  }\n});\n\nbody.addEventListener('click', (e) => {\n  const allRows = [...body.querySelectorAll('tr')];\n\n  allRows.forEach((row) => {\n    row.classList.remove('active');\n  });\n\n  e.target.closest('tr').classList.add('active');\n});\n\n// #region notification\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n  const messageTitle = document.createElement('h2');\n  const messageDescription = document.createElement('p');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n  notification.position = 'relative';\n  messageTitle.classList.add('title');\n  messageTitle.textContent = title;\n  messageDescription.textContent = description;\n\n  notification.appendChild(messageTitle);\n  notification.appendChild(messageDescription);\n\n  notification.style.position = 'relative';\n\n  notificationDiv.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n// #endregion\n\nconst formSubmit = (e) => {\n  e.preventDefault();\n\n  let hasError = false;\n\n  const formData = new FormData(e.target.closest('form'));\n\n  const fields = ['name', 'position', 'office', 'age', 'salary'];\n\n  const fieldValues = fields.map((field) => {\n    let value = formData.get(field).trim();\n\n    if (field === 'salary') {\n      value = '$' + value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    return {\n      key: field,\n      value,\n    };\n  });\n\n  hasError = validation(fieldValues);\n\n  if (!hasError) {\n    const row = document.createElement('tr');\n\n    fieldValues.forEach((value) => {\n      const col = document.createElement('td');\n\n      col.textContent = value.value;\n      row.appendChild(col);\n    });\n\n    body.appendChild(row);\n\n    pushNotification(\n      'Add new employee',\n      'New employee was added to table',\n      'success',\n    );\n  }\n};\n\nconst createForm = () => {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  inputs.forEach((eachInput) => {\n    const label = document.createElement('label');\n    let input = document.createElement('select');\n\n    if (eachInput !== 'Office') {\n      input = document.createElement('input');\n\n      switch (eachInput) {\n        case 'Age':\n        case 'Salary':\n          input.type = 'number';\n          break;\n        default:\n          input.type = 'text';\n      }\n    }\n\n    label.textContent = `${eachInput}: `;\n    input.name = eachInput.toLowerCase();\n    input.dataset.qa = eachInput.toLowerCase();\n\n    label.appendChild(input);\n    form.appendChild(label);\n  });\n\n  const office = form.querySelector('select');\n\n  offices.forEach((eachOffice) => {\n    const option = document.createElement('option');\n\n    option.textContent = eachOffice;\n    option.value = eachOffice;\n    office.appendChild(option);\n  });\n\n  const button = document.createElement('button');\n\n  button.type = 'submit';\n  button.textContent = 'Save to table';\n  form.appendChild(button);\n  form.addEventListener('submit', formSubmit);\n\n  return form;\n};\n\ndocument.body.appendChild(createForm());\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","form","office","button","head","document","querySelector","body","sortOrder","sortColumnIndex","isEnterPressed","notificationDiv","createElement","style","position","top","right","appendChild","validateName","pushNotification","validateAge","age","isNaN","validation","values","hasError","requiredError","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","fieldsValue","value","key","err","return","addEventListener","e","rows","querySelectorAll","index","target","parentNode","children","indexOf","sort","row1","row2","columns1","columns2","cell1","textContent","cell2","localeCompare","first","replace","second","innerHTML","forEach","row","changeValue","oldData","input","cell","closest","trim","validateSalary","remove","onEnter","keyCode","checkOtherSelect","otherSelect","classList","add","focus","onblur","event","select","cloneNode","setTimeout","allRows","title","description","type","notification","messageTitle","messageDescription","dataset","qa","inputs","eachInput","label","concat","toLowerCase","offices","eachOffice","option","preventDefault","formData","FormData","fieldValues","fields","map","field","get","col"],"version":3,"file":"index.51beffa5.js.map"}